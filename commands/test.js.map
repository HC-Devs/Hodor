{"version":3,"file":"test.js","sourceRoot":"","sources":["test.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,kDAAoD;AACpD,UAAU;AAEV,UAAU;AAEV,YAAY;AACZ,MAAM,YAAY,GAAG,EAAE,CAAC;AACxB,MAAM,YAAY,GAAG,EAAE,CAAC;AACxB,MAAM,eAAe,GAAG,EAAE,CAAC;AAC3B,MAAM,aAAa,GAAG,EAAE,CAAC;AAEzB,OAAO;AACP,MAAM,OAAO,GAAG,MAAM,CAAC;AAEvB,WAAW;AACX;IAII,YAAY,GAAG;QACX,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,IAAI,CAAC,MAAM,GAAG;YACV,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,CAAC,GAAG,CAAC;YACb,OAAO,EAAE,IAAI;SAChB,CAAC;IACN,CAAC;IAEK,GAAG,CAAC,OAAO,EAAE,IAAI;;YACnB,eAAe;YACf,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAAE,OAAO;YAEvF,cAAc;YACd,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAAE,OAAO;YAEtF,cAAc;YACd,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAAE,OAAO;YAEtG,iBAAiB;YACjB,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAAE,OAAO;YAE7F,YAAY;YACZ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YAErB,MAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACjC,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YACrC,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;YAEnC,UAAU;YACV,MAAM,iBAAiB,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;YAEtC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAGzF,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAExB,CAAC,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC;KAAA;CACJ;AAED,YAAY;AACZ,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","sourcesContent":["import fi = require ('../core/service/userservice');\n/* Vars */\n\n/* Libs */\n\n/* Rights */\nconst allowedUsers = [];\nconst allowedRoles = [];\nconst allowedChannels = [];\nconst allowedGuilds = [];\n\n/* - */\nconst command = \"test\";\n\n/* Class */\nclass CMD_TEST {\n    bot: any;\n    config: any;\n\n    constructor(bot) {\n        this.bot = bot;\n\n        this.config = {\n            name: command,\n            prefix: [\"!\"],\n            timeout: 5000\n        };\n    }\n\n    async run(message, args) {\n        // check guilds\n        if (allowedGuilds.length > 0 && allowedGuilds.indexOf(message.guild.id) === -1) return;\n\n        // check users\n        if (allowedUsers.length > 0 && allowedUsers.indexOf(message.author.id) === -1) return;\n\n        // check roles\n        if (allowedRoles.length > 0 && !message.member.roles.some(r => allowedRoles.includes(r.name))) return;\n\n        // check channels\n        if (allowedChannels.length > 0 && allowedChannels.indexOf(message.channel.id) === -1) return;\n\n        // constants\n        const bot = this.bot;\n\n        const guildID = message.guild.id;\n        const channelID = message.channel.id;\n        const authorID = message.author.id;\n\n        // command\n        const deleteMessageTime = (30 * 1000);\n\n        message.channel.send(\":white_check_mark: OK\").then(msg => msg.delete(deleteMessageTime));\n\n\n        let r = await fi.ListUser(this.bot.sql);\n        message.channel.send(r);\n\n        r = await fi.TestUser(this.bot.sql);\n        message.channel.send(r);\n    }\n}\n\n/* Export */\nmodule.exports = CMD_TEST;"]}