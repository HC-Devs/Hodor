import {BaseDao} from "./BaseDao";
import {UserWs} from "../model/UserWs";
import {Sqlite} from "../../classes/Sqlite";

const tableName: string = "user_ws";

const fkUserIdField: string = "fk_user_id";
const fkWsIdField: string = "fk_ws_id";

const idField: string = tableName + "_id"; 

export class ModuleDao extends BaseDao<UserWs> {
    constructor(sqlConnector: Sqlite) {
        super(tableName, idField, sqlConnector);
    }

    protected getMapDataFromModel(model: UserWs): Map<string, any> {
        let result: Map<string, any> = new Map<string, any>();
        //result.set(this.idFieldName, model.id); // only needed for user; others id are autogenerated
        result.set(fkUserIdField, model.userId);
        result.set(fkWsIdField, model.wsId);
        return result;
    }

    protected getModelFromRow(row: any): UserWs {
        return new UserWs(row[idField], row[fkUserIdField], row[fkWsIdField]);
    }
}