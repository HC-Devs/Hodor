import {BaseDao} from "./BaseDao";
import {ShipWs} from "../model/ShipWs";
import {Sqlite} from "../../sql/Sqlite";

const tableName: string = "ship_ws";
const fkWsIdField: string = "fk_ws_id";
const fkShipIdField: string = "fk_ship_id";
const destructDateField: string = "ship_ws_destruct_time";
const idField: string = tableName + "_id"; 

export class ModuleDao extends BaseDao<ShipWs> {
    constructor(sqlConnector: Sqlite) {
        super(tableName, idField, sqlConnector);
    }

    protected getMapDataFromModel(model: ShipWs): Map<string, any> {
        let result: Map<string, any> = new Map<string, any>();
        //result.set(this.idFieldName, model.id); // only needed for user; others id are autogenerated
        result.set(fkShipIdField, model.shipId);
        result.set(fkWsIdField, model.wsId);
        result.set(destructDateField, model.destructDate);
        return result;
    }

    protected getModelFromRow(row: any): ShipWs {
        return new ShipWs(row[idField], row[fkShipIdField], row[fkWsIdField], row[destructDateField]);
    }
}