import {BaseDao} from "./BaseDao";
import {ShipUserModule} from "../model/ShipUserModule";
import {Sqlite} from "../../sql/Sqlite";

const tableName: string = "ship_user_module";
const fkUserModuleIdField: string = "fk_user_module_id";
const fkShipIdField: string = "fk_ship_id";
const lastActivationDateField: string = "ship_user_module_last_activation_date";
const idField: string = tableName + "_id"; //"ship_user_module_id";

export class ModuleDao extends BaseDao<ShipUserModule> {
    constructor(sqlConnector: Sqlite) {
        super(tableName, idField, sqlConnector);
    }

    protected getMapDataFromModel(model: ShipUserModule): Map<string, any> {
        let result: Map<string, any> = new Map<string, any>();
        //result.set(this.idFieldName, model.id); // only needed for user; others id are autogenerated
        result.set(fkShipIdField, model.shipId);
        result.set(fkUserModuleIdField, model.userModuleId);
        result.set(lastActivationDateField, model.lastActivationDate);
        return result;
    }

    protected getModelFromRow(row: any): ShipUserModule {
        return new ShipUserModule(row[idField], row[fkShipIdField], row[fkUserModuleIdField], row[lastActivationDateField]);
    }
}