import {User} from '../model/User';
import {SQLITE} from '../../classes/sqlite';
import {BaseDao} from './BaseDao';

const userDbTable: string = 'user';
const userNameField: string = 'user_name';
const userCorpoField: string = 'user_corpo';
const userIdField: string = 'user_id';

export class UserDao extends BaseDao<User> {
    constructor(sqlConnector: SQLITE) {
        super(userDbTable, userIdField, sqlConnector);
    }

    protected getMapDataFromModel(model: User): Map<string, any> {
        let result: Map<string, any> = new Map<string, any>();
        result.set(this.idFieldName, model.id); // only needed for user; others id are autogenerated
        result.set(userNameField, model.name);
        result.set(userCorpoField, model.corpo);
        return result;
    }

    protected getModelFromRow(row: any): User {
        return new User(row[userIdField], row[userNameField], row[userCorpoField]);
    }
}